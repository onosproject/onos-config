apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  release: "{{ .Release.Name }}"
  heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      name: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        name: {{ template "fullname" . }}
      {{ if .Values.annotations }}
      annotations:
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
      {{ end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - onos-config
          args:
            - "-caPath=/etc/onos-config/certs/tls.cacrt"
            - "-keyPath=/etc/onos-config/certs/tls.key"
            - "-certPath=/etc/onos-config/certs/tls.crt"
            - "-configStore=/etc/onos-config/test-configs/configStore-sample.json"
            - "-changeStore=/etc/onos-config/test-configs/changeStore-sample.json"
            {{ if .Values.devices }}
            - "-deviceStore=/etc/onos-config/test-configs/deviceStore.json"
            {{ else }}
            - "-deviceStore=/etc/onos-config/test-configs/deviceStore-sample.json"
            {{ end }}
            - "-networkStore=/etc/onos-config/test-configs/networkStore-sample.json"
          ports:
            - name: grpc
              containerPort: 5150
          readinessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 15
            periodSeconds: 20
          # Mount the test configuration
          # TODO: This should be removed when stores are added!
          volumeMounts:
            - name: test-config
              mountPath: /etc/onos-config/test-configs
              readOnly: true
            - name: secret
              mountPath: /etc/onos-config/certs
              readOnly: true
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . | quote }}
        {{- end }}
      {{- end }}
      # Mount test volumes
      # TODO: This should be removed when stores are added!
      volumes:
        - name: test-config
          configMap:
            name: {{ template "fullname" . }}-config
        - name: secret
          secret:
            secretName: {{ template "fullname" . }}-secret