// Code generated by protoc-gen-gogo. DO NOT EDIT.
// Source: pkg/controller/filter.go

// Package controller is a generated GoMock package.
package controller

import (
	gomock "github.com/golang/mock/gomock"
	types "github.com/onosproject/onos-config/api/types"
	device "github.com/onosproject/onos-topo/api/device"
	reflect "reflect"
)

// MockFilter is a mock of Filter interface
type MockFilter struct {
	ctrl     *gomock.Controller
	recorder *MockFilterMockRecorder
}

// MockFilterMockRecorder is the mock recorder for MockFilter
type MockFilterMockRecorder struct {
	mock *MockFilter
}

// NewMockFilter creates a new mock instance
func NewMockFilter(ctrl *gomock.Controller) *MockFilter {
	mock := &MockFilter{ctrl: ctrl}
	mock.recorder = &MockFilterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFilter) EXPECT() *MockFilterMockRecorder {
	return m.recorder
}

// Accept mocks base method
func (m *MockFilter) Accept(id types.ID) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Accept", id)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Accept indicates an expected call of Accept
func (mr *MockFilterMockRecorder) Accept(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Accept", reflect.TypeOf((*MockFilter)(nil).Accept), id)
}

// MockDeviceResolver is a mock of DeviceResolver interface
type MockDeviceResolver struct {
	ctrl     *gomock.Controller
	recorder *MockDeviceResolverMockRecorder
}

// MockDeviceResolverMockRecorder is the mock recorder for MockDeviceResolver
type MockDeviceResolverMockRecorder struct {
	mock *MockDeviceResolver
}

// NewMockDeviceResolver creates a new mock instance
func NewMockDeviceResolver(ctrl *gomock.Controller) *MockDeviceResolver {
	mock := &MockDeviceResolver{ctrl: ctrl}
	mock.recorder = &MockDeviceResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDeviceResolver) EXPECT() *MockDeviceResolverMockRecorder {
	return m.recorder
}

// Resolve mocks base method
func (m *MockDeviceResolver) Resolve(id types.ID) (device.ID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Resolve", id)
	ret0, _ := ret[0].(device.ID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Resolve indicates an expected call of Resolve
func (mr *MockDeviceResolverMockRecorder) Resolve(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resolve", reflect.TypeOf((*MockDeviceResolver)(nil).Resolve), id)
}
