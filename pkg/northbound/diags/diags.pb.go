// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/northbound/diags/diags.proto

package diags

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	admin "github.com/onosproject/onos-config/pkg/northbound/admin"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// ChangesRequest is a message for specifying GetChanges query parameters.
type ChangesRequest struct {
	ChangeIDs            []string `protobuf:"bytes,1,rep,name=change_ids,json=changeIds,proto3" json:"change_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangesRequest) Reset()         { *m = ChangesRequest{} }
func (m *ChangesRequest) String() string { return proto.CompactTextString(m) }
func (*ChangesRequest) ProtoMessage()    {}
func (*ChangesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_624d839d9ad9df06, []int{0}
}
func (m *ChangesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangesRequest.Unmarshal(m, b)
}
func (m *ChangesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangesRequest.Marshal(b, m, deterministic)
}
func (m *ChangesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangesRequest.Merge(m, src)
}
func (m *ChangesRequest) XXX_Size() int {
	return xxx_messageInfo_ChangesRequest.Size(m)
}
func (m *ChangesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangesRequest proto.InternalMessageInfo

func (m *ChangesRequest) GetChangeIDs() []string {
	if m != nil {
		return m.ChangeIDs
	}
	return nil
}

// ConfigRequest is a message for specifying GetConfigurations query parameters.
type ConfigRequest struct {
	DeviceIDs            []string `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigRequest) Reset()         { *m = ConfigRequest{} }
func (m *ConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigRequest) ProtoMessage()    {}
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_624d839d9ad9df06, []int{1}
}
func (m *ConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigRequest.Unmarshal(m, b)
}
func (m *ConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigRequest.Marshal(b, m, deterministic)
}
func (m *ConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigRequest.Merge(m, src)
}
func (m *ConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigRequest.Size(m)
}
func (m *ConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigRequest proto.InternalMessageInfo

func (m *ConfigRequest) GetDeviceIDs() []string {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

// OpStateRequest is a message for specifying GetOpState query parameters.
type OpStateRequest struct {
	// The request is always in the context of a Device ID. If the device does
	// not exist or is disconnected an error will be returned.
	DeviceId string `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	// subscribe indicates whether to subscribe to events (e.g. ADD, UPDATE, and REMOVE) that occur
	// after all paths for the device have been streamed to the client
	Subscribe            bool     `protobuf:"varint,2,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpStateRequest) Reset()         { *m = OpStateRequest{} }
func (m *OpStateRequest) String() string { return proto.CompactTextString(m) }
func (*OpStateRequest) ProtoMessage()    {}
func (*OpStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_624d839d9ad9df06, []int{2}
}
func (m *OpStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpStateRequest.Unmarshal(m, b)
}
func (m *OpStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpStateRequest.Marshal(b, m, deterministic)
}
func (m *OpStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpStateRequest.Merge(m, src)
}
func (m *OpStateRequest) XXX_Size() int {
	return xxx_messageInfo_OpStateRequest.Size(m)
}
func (m *OpStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpStateRequest proto.InternalMessageInfo

func (m *OpStateRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *OpStateRequest) GetSubscribe() bool {
	if m != nil {
		return m.Subscribe
	}
	return false
}

type OpStateResponse struct {
	// type is the type of the event
	Type admin.Type `protobuf:"varint,1,opt,name=type,proto3,enum=proto.Type" json:"type,omitempty"`
	// device is the device on which the event occurred
	Pathvalue            *admin.ChangeValue `protobuf:"bytes,2,opt,name=pathvalue,proto3" json:"pathvalue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OpStateResponse) Reset()         { *m = OpStateResponse{} }
func (m *OpStateResponse) String() string { return proto.CompactTextString(m) }
func (*OpStateResponse) ProtoMessage()    {}
func (*OpStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_624d839d9ad9df06, []int{3}
}
func (m *OpStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpStateResponse.Unmarshal(m, b)
}
func (m *OpStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpStateResponse.Marshal(b, m, deterministic)
}
func (m *OpStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpStateResponse.Merge(m, src)
}
func (m *OpStateResponse) XXX_Size() int {
	return xxx_messageInfo_OpStateResponse.Size(m)
}
func (m *OpStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpStateResponse proto.InternalMessageInfo

func (m *OpStateResponse) GetType() admin.Type {
	if m != nil {
		return m.Type
	}
	return admin.Type_NONE
}

func (m *OpStateResponse) GetPathvalue() *admin.ChangeValue {
	if m != nil {
		return m.Pathvalue
	}
	return nil
}

// Configuration is a descriptor of a submitted configuration change targeted at a single device.
type Configuration struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DeviceID             string     `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Version              string     `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	DeviceType           string     `protobuf:"bytes,4,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	Created              *time.Time `protobuf:"bytes,5,opt,name=created,proto3,stdtime" json:"created,omitempty"`
	Updated              *time.Time `protobuf:"bytes,6,opt,name=updated,proto3,stdtime" json:"updated,omitempty"`
	ChangeIDs            []string   `protobuf:"bytes,7,rep,name=change_ids,json=changeIds,proto3" json:"change_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Configuration) Reset()         { *m = Configuration{} }
func (m *Configuration) String() string { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()    {}
func (*Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_624d839d9ad9df06, []int{4}
}
func (m *Configuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Configuration.Unmarshal(m, b)
}
func (m *Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Configuration.Marshal(b, m, deterministic)
}
func (m *Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration.Merge(m, src)
}
func (m *Configuration) XXX_Size() int {
	return xxx_messageInfo_Configuration.Size(m)
}
func (m *Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration proto.InternalMessageInfo

func (m *Configuration) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Configuration) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *Configuration) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Configuration) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *Configuration) GetCreated() *time.Time {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Configuration) GetUpdated() *time.Time {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *Configuration) GetChangeIDs() []string {
	if m != nil {
		return m.ChangeIDs
	}
	return nil
}

func init() {
	proto.RegisterType((*ChangesRequest)(nil), "proto.ChangesRequest")
	proto.RegisterType((*ConfigRequest)(nil), "proto.ConfigRequest")
	proto.RegisterType((*OpStateRequest)(nil), "proto.OpStateRequest")
	proto.RegisterType((*OpStateResponse)(nil), "proto.OpStateResponse")
	proto.RegisterType((*Configuration)(nil), "proto.Configuration")
}

func init() { proto.RegisterFile("pkg/northbound/diags/diags.proto", fileDescriptor_624d839d9ad9df06) }

var fileDescriptor_624d839d9ad9df06 = []byte{
	// 506 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0x25, 0xbb, 0xdd, 0x6d, 0x73, 0xbb, 0xad, 0x38, 0xac, 0x12, 0x82, 0x90, 0xd2, 0xa7, 0x0a,
	0x9a, 0x94, 0xea, 0x93, 0xb0, 0x82, 0x6d, 0x41, 0x56, 0x10, 0x21, 0x2e, 0xbe, 0xca, 0x24, 0x99,
	0x4d, 0x47, 0x37, 0x33, 0x63, 0x66, 0x52, 0xd8, 0x3f, 0xe0, 0xb3, 0xff, 0xc4, 0x7f, 0xb4, 0xc2,
	0xfe, 0x12, 0xc9, 0x7c, 0xf4, 0x4b, 0x90, 0x7d, 0x49, 0xef, 0x9c, 0x7b, 0xce, 0xe9, 0xbd, 0x97,
	0x03, 0x23, 0xf1, 0xbd, 0x4c, 0x18, 0xaf, 0xd5, 0x2a, 0xe3, 0x0d, 0x2b, 0x92, 0x82, 0xe2, 0x52,
	0x9a, 0x6f, 0x2c, 0x6a, 0xae, 0x38, 0x3a, 0xd1, 0x3f, 0x61, 0x54, 0x72, 0x5e, 0xde, 0x90, 0x44,
	0xbf, 0xb2, 0xe6, 0x3a, 0x51, 0xb4, 0x22, 0x52, 0xe1, 0x4a, 0x18, 0x5e, 0x78, 0x5e, 0xf2, 0x92,
	0xeb, 0x32, 0x69, 0x2b, 0x8b, 0x2e, 0x4a, 0xaa, 0x56, 0x4d, 0x16, 0xe7, 0xbc, 0x4a, 0x38, 0xe3,
	0x52, 0xd4, 0xfc, 0x1b, 0xc9, 0x95, 0xae, 0x5f, 0xe6, 0x9c, 0x5d, 0xd3, 0x32, 0x39, 0x18, 0x01,
	0x17, 0x15, 0x65, 0xe6, 0x6b, 0x4c, 0xc6, 0x6f, 0x61, 0xb8, 0x58, 0x61, 0x56, 0x12, 0x99, 0x92,
	0x1f, 0x0d, 0x91, 0x0a, 0xbd, 0x00, 0xc8, 0x35, 0xf2, 0x95, 0x16, 0x32, 0xf0, 0x46, 0xc7, 0x13,
	0x7f, 0x3e, 0xb8, 0xbf, 0x8b, 0x7c, 0xc3, 0xbb, 0x5c, 0xca, 0xd4, 0x37, 0x84, 0xcb, 0x42, 0x8e,
	0x2f, 0x60, 0xb0, 0xd0, 0x7f, 0xb5, 0x23, 0x2f, 0xc8, 0x9a, 0xe6, 0xff, 0xc8, 0x97, 0x1a, 0xd5,
	0x72, 0x43, 0x68, 0xe5, 0x1f, 0x60, 0xf8, 0x49, 0x7c, 0x56, 0x58, 0x11, 0xa7, 0x0f, 0xa1, 0xe7,
	0xda, 0x81, 0x37, 0xf2, 0x26, 0x7e, 0xba, 0x79, 0xa3, 0x67, 0xe0, 0xcb, 0x26, 0x93, 0x79, 0x4d,
	0x33, 0x12, 0x1c, 0x8d, 0xbc, 0x49, 0x2f, 0xdd, 0x02, 0xe3, 0x02, 0x1e, 0x6d, 0xbc, 0xa4, 0xe0,
	0x4c, 0x12, 0x14, 0x41, 0x47, 0xdd, 0x0a, 0xa2, 0x8d, 0x86, 0xb3, 0xbe, 0xd9, 0x39, 0xbe, 0xba,
	0x15, 0x24, 0xd5, 0x0d, 0x34, 0x05, 0x5f, 0x60, 0xb5, 0x5a, 0xe3, 0x9b, 0xc6, 0x38, 0xf6, 0x67,
	0xc8, 0xb2, 0xcc, 0xba, 0x5f, 0xda, 0x4e, 0xba, 0x25, 0x8d, 0x7f, 0x1f, 0xb9, 0x8d, 0x9b, 0x1a,
	0x2b, 0xca, 0x19, 0x42, 0xd0, 0x61, 0xb8, 0x22, 0x76, 0x5a, 0x5d, 0xa3, 0xe7, 0xe0, 0x6f, 0xae,
	0xa0, 0x7d, 0xfd, 0xf9, 0xd9, 0xfd, 0x5d, 0xd4, 0x73, 0x47, 0xd8, 0x59, 0x2a, 0x80, 0xee, 0x9a,
	0xd4, 0x92, 0x72, 0x16, 0x1c, 0x6b, 0x07, 0xf7, 0x44, 0x11, 0xf4, 0xad, 0x89, 0x5e, 0xa2, 0xa3,
	0xbb, 0xf6, 0xba, 0xed, 0x0e, 0xe8, 0x0d, 0x74, 0xf3, 0x9a, 0x60, 0x45, 0x8a, 0xe0, 0x44, 0xcf,
	0x1e, 0xc6, 0x26, 0x4a, 0xb1, 0x8b, 0x52, 0x7c, 0xe5, 0xa2, 0x34, 0xef, 0xfc, 0xfa, 0x13, 0x79,
	0xa9, 0x13, 0xb4, 0xda, 0x46, 0x14, 0x5a, 0x7b, 0xfa, 0x50, 0xad, 0x15, 0x1c, 0x44, 0xa4, 0xfb,
	0xff, 0x88, 0xcc, 0x7e, 0x7a, 0xd0, 0x37, 0x17, 0x5b, 0xb6, 0xd9, 0x47, 0xaf, 0x01, 0xde, 0x13,
	0x65, 0x53, 0x87, 0x9e, 0xec, 0x9d, 0xdb, 0xa5, 0x30, 0x1c, 0xec, 0xc1, 0x53, 0x0f, 0xbd, 0x83,
	0xc7, 0xad, 0x6a, 0xf7, 0xf2, 0x12, 0x9d, 0x3b, 0xd6, 0x6e, 0x04, 0xc3, 0x7d, 0xd4, 0x92, 0xa7,
	0xde, 0xec, 0x23, 0x9c, 0xd9, 0x80, 0x98, 0x41, 0x2e, 0xf4, 0x20, 0x16, 0xda, 0x0c, 0xb2, 0x9f,
	0xc7, 0xf0, 0xe9, 0x21, 0x6c, 0xa2, 0x35, 0xf5, 0xb2, 0x53, 0xdd, 0x78, 0xf5, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x2a, 0x68, 0x9c, 0xaa, 0xe8, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigDiagsClient is the client API for ConfigDiags service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigDiagsClient interface {
	// GetChanges returns a stream of submitted changes objects.
	GetChanges(ctx context.Context, in *ChangesRequest, opts ...grpc.CallOption) (ConfigDiags_GetChangesClient, error)
	// GetConfigurations returns a stream of submitted configurations aimed at individual devices.
	GetConfigurations(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (ConfigDiags_GetConfigurationsClient, error)
}

type configDiagsClient struct {
	cc *grpc.ClientConn
}

func NewConfigDiagsClient(cc *grpc.ClientConn) ConfigDiagsClient {
	return &configDiagsClient{cc}
}

func (c *configDiagsClient) GetChanges(ctx context.Context, in *ChangesRequest, opts ...grpc.CallOption) (ConfigDiags_GetChangesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ConfigDiags_serviceDesc.Streams[0], "/proto.ConfigDiags/GetChanges", opts...)
	if err != nil {
		return nil, err
	}
	x := &configDiagsGetChangesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ConfigDiags_GetChangesClient interface {
	Recv() (*admin.Change, error)
	grpc.ClientStream
}

type configDiagsGetChangesClient struct {
	grpc.ClientStream
}

func (x *configDiagsGetChangesClient) Recv() (*admin.Change, error) {
	m := new(admin.Change)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *configDiagsClient) GetConfigurations(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (ConfigDiags_GetConfigurationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ConfigDiags_serviceDesc.Streams[1], "/proto.ConfigDiags/GetConfigurations", opts...)
	if err != nil {
		return nil, err
	}
	x := &configDiagsGetConfigurationsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ConfigDiags_GetConfigurationsClient interface {
	Recv() (*Configuration, error)
	grpc.ClientStream
}

type configDiagsGetConfigurationsClient struct {
	grpc.ClientStream
}

func (x *configDiagsGetConfigurationsClient) Recv() (*Configuration, error) {
	m := new(Configuration)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ConfigDiagsServer is the server API for ConfigDiags service.
type ConfigDiagsServer interface {
	// GetChanges returns a stream of submitted changes objects.
	GetChanges(*ChangesRequest, ConfigDiags_GetChangesServer) error
	// GetConfigurations returns a stream of submitted configurations aimed at individual devices.
	GetConfigurations(*ConfigRequest, ConfigDiags_GetConfigurationsServer) error
}

// UnimplementedConfigDiagsServer can be embedded to have forward compatible implementations.
type UnimplementedConfigDiagsServer struct {
}

func (*UnimplementedConfigDiagsServer) GetChanges(req *ChangesRequest, srv ConfigDiags_GetChangesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetChanges not implemented")
}
func (*UnimplementedConfigDiagsServer) GetConfigurations(req *ConfigRequest, srv ConfigDiags_GetConfigurationsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetConfigurations not implemented")
}

func RegisterConfigDiagsServer(s *grpc.Server, srv ConfigDiagsServer) {
	s.RegisterService(&_ConfigDiags_serviceDesc, srv)
}

func _ConfigDiags_GetChanges_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ChangesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ConfigDiagsServer).GetChanges(m, &configDiagsGetChangesServer{stream})
}

type ConfigDiags_GetChangesServer interface {
	Send(*admin.Change) error
	grpc.ServerStream
}

type configDiagsGetChangesServer struct {
	grpc.ServerStream
}

func (x *configDiagsGetChangesServer) Send(m *admin.Change) error {
	return x.ServerStream.SendMsg(m)
}

func _ConfigDiags_GetConfigurations_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConfigRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ConfigDiagsServer).GetConfigurations(m, &configDiagsGetConfigurationsServer{stream})
}

type ConfigDiags_GetConfigurationsServer interface {
	Send(*Configuration) error
	grpc.ServerStream
}

type configDiagsGetConfigurationsServer struct {
	grpc.ServerStream
}

func (x *configDiagsGetConfigurationsServer) Send(m *Configuration) error {
	return x.ServerStream.SendMsg(m)
}

var _ConfigDiags_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ConfigDiags",
	HandlerType: (*ConfigDiagsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetChanges",
			Handler:       _ConfigDiags_GetChanges_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetConfigurations",
			Handler:       _ConfigDiags_GetConfigurations_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pkg/northbound/diags/diags.proto",
}

// OpStateDiagsClient is the client API for OpStateDiags service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OpStateDiagsClient interface {
	// GetOpState returns a stream of submitted OperationalStateCache aimed at individual devices.
	// If subscribe is true keep on streaming after the initial set are finished
	GetOpState(ctx context.Context, in *OpStateRequest, opts ...grpc.CallOption) (OpStateDiags_GetOpStateClient, error)
}

type opStateDiagsClient struct {
	cc *grpc.ClientConn
}

func NewOpStateDiagsClient(cc *grpc.ClientConn) OpStateDiagsClient {
	return &opStateDiagsClient{cc}
}

func (c *opStateDiagsClient) GetOpState(ctx context.Context, in *OpStateRequest, opts ...grpc.CallOption) (OpStateDiags_GetOpStateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OpStateDiags_serviceDesc.Streams[0], "/proto.OpStateDiags/GetOpState", opts...)
	if err != nil {
		return nil, err
	}
	x := &opStateDiagsGetOpStateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OpStateDiags_GetOpStateClient interface {
	Recv() (*OpStateResponse, error)
	grpc.ClientStream
}

type opStateDiagsGetOpStateClient struct {
	grpc.ClientStream
}

func (x *opStateDiagsGetOpStateClient) Recv() (*OpStateResponse, error) {
	m := new(OpStateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OpStateDiagsServer is the server API for OpStateDiags service.
type OpStateDiagsServer interface {
	// GetOpState returns a stream of submitted OperationalStateCache aimed at individual devices.
	// If subscribe is true keep on streaming after the initial set are finished
	GetOpState(*OpStateRequest, OpStateDiags_GetOpStateServer) error
}

// UnimplementedOpStateDiagsServer can be embedded to have forward compatible implementations.
type UnimplementedOpStateDiagsServer struct {
}

func (*UnimplementedOpStateDiagsServer) GetOpState(req *OpStateRequest, srv OpStateDiags_GetOpStateServer) error {
	return status.Errorf(codes.Unimplemented, "method GetOpState not implemented")
}

func RegisterOpStateDiagsServer(s *grpc.Server, srv OpStateDiagsServer) {
	s.RegisterService(&_OpStateDiags_serviceDesc, srv)
}

func _OpStateDiags_GetOpState_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OpStateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OpStateDiagsServer).GetOpState(m, &opStateDiagsGetOpStateServer{stream})
}

type OpStateDiags_GetOpStateServer interface {
	Send(*OpStateResponse) error
	grpc.ServerStream
}

type opStateDiagsGetOpStateServer struct {
	grpc.ServerStream
}

func (x *opStateDiagsGetOpStateServer) Send(m *OpStateResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _OpStateDiags_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.OpStateDiags",
	HandlerType: (*OpStateDiagsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetOpState",
			Handler:       _OpStateDiags_GetOpState_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pkg/northbound/diags/diags.proto",
}
