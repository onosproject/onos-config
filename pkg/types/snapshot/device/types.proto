/*
Copyright 2019-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package onos.config.snapshot.device;

import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";
import "github.com/onosproject/onos-config/pkg/types/snapshot/types.proto";
import "github.com/onosproject/onos-config/pkg/types/change/device/types.proto";

// DeviceSnapshot is a device snapshot
message DeviceSnapshot {
    // 'id' is the unique snapshot identifier
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];

    // 'device_id' is the device to which the snapshot applies
    string device_id = 2 [(gogoproto.customname) = "DeviceID", (gogoproto.casttype) = "github.com/onosproject/onos-topo/pkg/northbound/device.ID"];

    // 'revision' is the request revision number
    uint64 revision = 3 [(gogoproto.casttype) = "Revision"];

    // 'network_snapshot' is a reference to the network snapshot from which this snapshot was created
    NetworkSnapshotRef network_snapshot = 4 [(gogoproto.nullable) = false];

    // 'max_network_change_index' is the maximum network change index to be snapshotted for the device
    uint64 max_network_change_index = 5 [(gogoproto.casttype) = "github.com/onosproject/onos-config/pkg/types.Index"];

    // 'status' is the snapshot status
    onos.config.snapshot.Status status = 6 [(gogoproto.nullable) = false];

    // 'created' is the time at which the configuration was created
    google.protobuf.Timestamp created = 7 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

    // 'updated' is the time at which the configuration was last updated
    google.protobuf.Timestamp updated = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

// NetworkSnapshotRef is a back reference to the NetworkSnapshot that created a DeviceSnapshot
message NetworkSnapshotRef {
    // 'id' is the identifier of the network snapshot from which this snapshot was created
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "github.com/onosproject/onos-config/pkg/types.ID"];

    // 'index' is the index of the network snapshot from which this snapshot was created
    uint64 index = 2 [(gogoproto.casttype) = "github.com/onosproject/onos-config/pkg/types.Index"];
}

// Snapshot is a snapshot of the state of a single device
message Snapshot {
    // 'id' is a unique snapshot identifier
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];

    // 'device_id' is the device to which the snapshot applies
    string device_id = 2 [(gogoproto.customname) = "DeviceID", (gogoproto.casttype) = "github.com/onosproject/onos-topo/pkg/northbound/device.ID"];

    // 'snapshot_id' is the ID of the snapshot
    string snapshot_id = 3 [(gogoproto.customname) = "SnapshotID", (gogoproto.casttype) = "ID"];

    // 'change_index' is the change index at which the snapshot ended
    uint64 change_index = 4 [(gogoproto.casttype) = "github.com/onosproject/onos-config/pkg/types/change/device.Index"];

    // 'values' is a list of values to set
    repeated onos.config.change.device.PathValue values = 5;
}
